<?php

namespace SC\ActiviteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * InscriptionStageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InscriptionStageRepository extends EntityRepository
{
    public function validationPayment($prixTotal, $activite, $user, $nomEnfant, $prenomEnfant, $debutStage, $finStage) {
      $query = $this->_em->createQuery('UPDATE SCActiviteBundle:InscriptionStage i'
              . ' SET i.prixPayeStage = :prixTotal where i.activite = :activite'
              . ' AND i.user = :user AND i.debutStage = :debutStage AND i.finStage = :finStage'
              . ' and i.nomEnfant = :nom AND i.prenomEnfant = :prenom')
                       ->setParameter('prixTotal', $prixTotal)
                       ->setParameter('activite', $activite)
                       ->setParameter('nom', $nomEnfant)
                       ->setParameter('prenom', $prenomEnfant)
                       ->setParameter('user', $user)
                       ->setParameter('debutStage', $debutStage)
                       ->setParameter('finStage', $finStage);

       $query->execute();
    }
    
    public function getStage($activte,$debutStage,$finStage) {
        
    }
    
    // pour un utilisateur, tous les stages  ou les enfants sont inscrits
    //return la somme
    public function totalStage($email) {
        $saison = new Saison;
        $year = $saison->connaitreSaison();
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.user = :user')
            ->where('a.saison = :annee')
            ->setParameter('user', $email)
            ->setParameter('annee', $year);

        $total = 0;
        $inscription = $qb->getQuery()->getResult();
        foreach ($inscription as $inscrit) {
            $total = $total + $inscrit->getPrixPayeStage();
        }
        return $total;
    }
}
